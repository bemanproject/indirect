load("@bazel_skylib//rules:build_test.bzl", "build_test")

cc_library(
    name = "indirect_in_variant",
    srcs = ["indirect_in_variant.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:indirect"],
)

build_test(
    name = "indirect_in_variant_build_test",
    targets = ["indirect_in_variant"],
)

cc_library(
    name = "indirect_as_member",
    srcs = ["indirect_as_member.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:indirect"],
)

build_test(
    name = "indirect_as_member_build_test",
    targets = ["indirect_as_member"],
)

cc_library(
    name = "indirect_consteval",
    srcs = ["indirect_consteval.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:indirect"],
)

build_test(
    name = "indirect_consteval_build_test",
    targets = ["indirect_consteval"],
)

cc_library(
    name = "polymorphic_consteval",
    srcs = ["polymorphic_consteval.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:polymorphic"],
)

build_test(
    name = "polymorphic_consteval_build_test",
    targets = ["polymorphic_consteval"],
)

cc_library(
    name = "indirect_pimpl",
    srcs = [
        "indirect_pimpl.cpp",
        "indirect_pimpl_use.cpp",
    ],
    hdrs = ["indirect_pimpl.hpp"],
    visibility = ["//visibility:private"],
    deps = ["//:indirect"],
)

build_test(
    name = "indirect_pimpl_build_test",
    targets = ["indirect_pimpl"],
)

cc_library(
    name = "polymorphic_pimpl",
    srcs = [
        "polymorphic_pimpl.cpp",
        "polymorphic_pimpl_use.cpp",
    ],
    hdrs = ["polymorphic_pimpl.hpp"],
    visibility = ["//visibility:private"],
    deps = ["//:polymorphic"],
)

build_test(
    name = "polymorphic_pimpl_build_test",
    targets = ["polymorphic_pimpl"],
)

cc_library(
    name = "polymorphic_in_variant",
    srcs = ["polymorphic_in_variant.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:polymorphic"],
)

build_test(
    name = "polymorphic_in_variant_build_test",
    targets = ["polymorphic_in_variant"],
)

cc_library(
    name = "polymorphic_as_member",
    srcs = ["polymorphic_as_member.cpp"],
    visibility = ["//visibility:private"],
    deps = ["//:polymorphic"],
)

build_test(
    name = "polymorphic_as_member_build_test",
    targets = ["polymorphic_as_member"],
)
